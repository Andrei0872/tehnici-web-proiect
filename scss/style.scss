:root {
  --grey-one: #ad9b9a;
  --yellow-one: #f9fade;
  --white-one: #faf7f7;
  --light-blue-one: #deeefa;
  --dark-blue-one: #6d95b3;
}

$breakpoint-medium: 992px;
$breakpoint-small: 767px;
$breakpoint-xsmall: 540px;
$breakpoint-xsmall2: 680px;

$preventTransitionsClass: 'js-prevent-initial-transitions';
$hover-color: var(--grey-one);

%colorTransition {
  transition: color .3s;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

@media screen and (min-width: 320px) {
  html {
    // Formula found here: https://css-tricks.com/snippets/css/fluid-typography/
    font-size: calc(16px + 4 * ((100vw - 320px) / 680));
  }
}

@media screen and (min-width: 1000px) {
  html {
    font-size: 20px;
  }
}

html, body {
  min-height: 100%;
}

ul {
  list-style-type: none;
}

a {
  color: currentColor;
  text-decoration: none;
}

.layout-responsive {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 1rem;
  grid-row-gap: 2rem;
  padding: 0 1rem;

  @media all and (max-width: $breakpoint-small) {
    & {
      grid-template-columns: 100%;
    }

    & > section[class] {
      grid-column: 1 / -1;
    }
  }
}

.intro {
  grid-column: 1 / -1;

  &__item {
    width: 80%;
    margin: 2rem auto;

    @media all and (max-width: $breakpoint-medium) {
      width: 100%;
      padding: 0 1rem;
    }

    @media all and (max-width: $breakpoint-xsmall) {
      padding: 0;
    }
    
    &:first-child {
      font-size: 1.6rem;

      @media all and (max-width: $breakpoint-xsmall) {
        font-size: 1.3rem;
      }
    }

    &:nth-child(2) {
      font-size: .9rem;

      @media all and (max-width: $breakpoint-xsmall) {
        font-size: .8rem;
      }
    }
  
    & button {
      font-size: 1rem;
      padding: 0.5rem;

      @media all and (max-width: $breakpoint-xsmall) {
        font-size: .8rem;
      }
    }
  }
}

.table {
  grid-column: 2 / span 2;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

.table-container {
  overflow-x: auto;

  & > table {
    width: 100%;
    text-align: left;
    border-spacing: 1px;
    min-width: 26rem;

    th, td {
      padding: .5rem;
    }

    & > tbody > tr {
      transition: background-color .2s linear;

      &:nth-child(even) {
        background-color: var(--yellow-one);
      }

      &:nth-child(odd) {
        background-color: var(--light-blue-one);
      }

      &:hover {
        background-color: var(--dark-blue-one);
      }
    }
  }
}

.site-data {
  grid-column: 3 / -1;
}

.main-content {
  grid-column: 1 / -1;
}

.explore {
  &__sections {
    display: flex;
    justify-content: space-between;
    flex-direction: row-reverse;
    flex-wrap: wrap;
  }

  &__results {
    flex-grow: 1;
  }

  @media all and (max-width: $breakpoint-small) {
    &__results {
      flex-grow: 0;
    }

    &__results, &__filters {
      margin-top: 1rem;
      flex-basis: 100%;
    }
  }
}

.testimonials {
  &__cards {
    margin-top: 1rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
  }
}

.testimonial-card {
  flex-basis: 30%;
  margin-top: 1rem;
  border: 1px solid black;

  @media all and (max-width: $breakpoint-medium) {
    flex-basis: 45%;
  }
  
  @media all and (max-width: $breakpoint-xsmall) {
    flex-basis: 100%;
  }
}

.feedback {
  &__form-container {
    display: flex;
    justify-content: center;
  }

  &__form {
    flex-basis: 50vw;
    display: flex;
    flex-direction: column;
    align-items: center;

    @media all and (max-width: $breakpoint-medium) {
      flex-basis: 90vw;
    }

    .form-control, .feedback-submit {
      width: 75%;
      margin-top: 1rem;

      @media all and (max-width: $breakpoint-medium) {
        & {
          width: 100%;
        }
      }
    }

    .form-control {
      & > :is(input, textarea) {
        width: 100%;
        resize: none;
      }
    }
  }
  
  &__options {
    display: flex;
    justify-content: space-around;
  }

  .feedback-submit {
    display: flex;
    justify-content: center;

    &__button {}
  }
}

.faq {
  &__questions {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-column-gap: 2.5rem;
    grid-auto-flow: row;
    grid-row-gap: 1rem;
    padding: .5rem 1rem;
    align-items: flex-start;

    & > details {
      background-color: var(--yellow-one);
      padding: .5rem;

      summary {
        cursor: pointer;
      }

      p {
        padding: .4rem;
      }
    }
  }

  &__additional-info {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
    padding: 0 1rem;
    flex-wrap: wrap;
  }
}

.additional-info-iframe {
  flex-grow: 1;

  &__content {
    width: 100%;
    height: 20rem;
    margin-top: 1rem;
  }
}

.additional-info-tabs {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.additional-info-tab {
  margin-top: 1rem;
  border: 1px solid var(--dark-blue-one);
  padding: .5rem;
  background-color: var(--light-blue-one);
  border-radius: .5rem;
  text-decoration: none;
  color: #000;
  transition: transform .1s linear;

  &:hover {
    transform: translateY(-.2rem);
  }
}

@media all and (max-width: $breakpoint-medium) {
  .announcement {
    grid-column: 1 / span 2;
  }
  
  .table {
    grid-column: 2 / -1;
  }
  
  .online-users {
      grid-column: 3 / -1;
  }
  
  .user-data {
    grid-column: 1 / 3;
  }
}


.header {
  background-color: var(--yellow-one);

  @media all and (max-width: $breakpoint-xsmall2) {
    display: flex;
    flex-direction: column;
    padding-top: .5rem;
  }
}

.hamburger {
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  margin-left: .5rem;
  margin-bottom: .5rem;
  
  & > svg {
    width: 100%;
    height: 100%;
  }
  
  @media all and (min-width: $breakpoint-xsmall2) {
    display: none;
  }
}

.nav {
  transition: max-height .2s linear, visibility .2s linear, opacity .2s linear;
  max-height: 20rem;
  visibility: visible;
  opacity: 1;

  &.#{$preventTransitionsClass} {
    transition: none;
  }
  
  @media all and (max-width: $breakpoint-xsmall2) {
    &:not(.is-shown) {
      max-height: 0;
      visibility: hidden;
      opacity: 0;
    }

    &.is-shown {
      animation: linear-appear 1s linear;
      animation-fill-mode: forwards;
      background: linear-gradient(to bottom, #fff 0%, var(--yellow-one) 100%) fixed;
      background-size: 200% 200%;
    }
  }

  @keyframes linear-appear {
    0% {
      background-position-y: 0%;
    }

    100% {
      background-position-y: 160%;
    }
  }
}

.nav-list {
  display: flex;
  justify-content: flex-end;
  align-items: stretch;
  padding: 0 2rem;

  @media all and (max-width: $breakpoint-xsmall2) {
    flex-direction: column;
    padding: 0;
  }
}

.nav-list-item {
  @extend %colorTransition;
  cursor: pointer;
  text-align: center;
  position: relative;
  min-width: 7rem;
  color: #000;

  @media all and (max-width: $breakpoint-medium) {
    font-size: .9rem;
  }

  // @media all and (max-width: $breakpoint-xsmall2) {

  // }
  
  :where(&, li) > a {
    text-decoration: none;
    color: currentColor;

    &:visited {
      color: currentColor;
    }
  }

  &:not(:first-child) {
    margin-left: 1rem;

    @media all and (max-width: $breakpoint-xsmall2) {
      margin-left: 0;
    }
  }
  
  & > ul {
    transition: transform .5s;
    transform: scale(0);
    transform-origin: top;
    position: absolute;
    top: 100%;
    width: 100%;
    color: #000;
    background: var(--yellow-one);
    z-index: 1;

    &.#{$preventTransitionsClass} {
      transition: none;
    }

    & li {
      @extend %colorTransition;
      padding: .4rem;
      font-size: 1em;
      
      &:hover {
        color: $hover-color;
      }

      &:not(:first-child) {
        border-top: 1px solid #000;
      }
    }
  }
  
  &:hover > ul {
    transform: scale(1);
  }

  &__text {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem;
  }

  &:hover {
    color: $hover-color;
  }
}

.nav-item-home {
  margin-right: auto;
  display: flex;
  align-items: center;

  @media all and (max-width: $breakpoint-xsmall2) {
    margin-right: 0;
    justify-content: center;
  }

  @media all and (max-width: $breakpoint-medium) {
    &__link {
      display: none;
    }
  }

  &__icon {
    width: 1.5rem;
  }

  &__link {
    margin-left: .5rem;
    color: $hover-color;
    transition: opacity .2s;
    opacity: 0;

    &.#{$preventTransitionsClass} {
      transition: none;
    }
  }
  
  &:hover &__link {
    opacity: 1;
  }
}

hr {
  height: 10px;
  background: radial-gradient(circle at center top, transparent 4px, var(--dark-blue-one) 8px, transparent 0px, transparent);
  background-repeat: repeat-x;
  background-size: .7rem;
  border: none;
  overflow: visible;
  position: relative;
  grid-column: 1 / -1;

  &::after {
    position: absolute;
    content: '';
    height: 9px;
    background: inherit;
    transform: scale(-1);
    background-repeat: repeat-x;
    bottom: 10px;
    width: 100%;
    background-size: .7rem;
    background-position-x: 7.5%;
    bottom: 100%;
    transform: scale(-1) translateY(-50%);
  }
}

.back-to-top {
  position: fixed;
  bottom: 8vh;
  background-color: var(--dark-blue-one);
  left: 4vw;
  width: 2.5rem;
  height: 2rem;
  opacity: .7;
  cursor: pointer;
  z-index: 1;
  transition: opacity .4s linear;

  &:hover {
    opacity: 1;
  }

  &::before {
    position: absolute;
    content: '';
    height: 100%;
    width: 100%;
    top: -50%;
    background-color: inherit;
    border-radius: 100%;
    z-index: -1;
    box-shadow: inset 0 0 4px var(--grey-one);
    transition: box-shadow .3s linear;
  }

  &:hover &::before {
    box-shadow: inset 0 0 20px var(--grey-one);
  }

  &__button {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: inherit;
    box-shadow: inset 1px -2px 2px var(--grey-one), inset -1px -2px 2px var(--grey-one);
    transition: box-shadow .3s linear;
  }

  &:hover &__button {
    box-shadow: inset 3px -4px 4px var(--grey-one), inset -3px -4px 4px var(--grey-one);
  }
  
  &__arrow {
    transition: transform .3s linear;
    transform: scale(.7) translateY(-50%);
    color: var(--light-blue-one);
  }

  &:hover &__arrow {
    transform: scale(1) translateY(-50%);
  }
}

// Color 3: var(--dark-blue-one)
// Color 2: var(--yellow-one)
.dull-banner {
  @media all and (max-width: $breakpoint-medium) {
    display: none;
  }

  position: fixed;
  width: 90vw;
  height: 10rem;
  border: 3px dashed #000;
  background-color: var(--light-blue-one);
  bottom: 15vh;
  left: 50%;
  transform: translateX(calc(-90vw - 60%));

  &.is-active {
    animation: banner-animation 2s linear;
    animation-fill-mode: forwards;
  }

  &__title {
    text-align: center;
    margin-top: 1rem;
  }

  &__content {
    text-align: center;
    padding: 2.5rem;
    font-size: 1.3rem;
  }


  @keyframes banner-animation {
    20% {
      background-color: var(--yellow-one);
      border-color: var(--dark-blue-one);
    }

    50% {
      background-color: var(--dark-blue-one);
      border-color: var(--yellow-one);
    }

    100% {
      background-color: var(--yellow-one);
      border-color: var(--dark-blue-one);
      transform: translateX(-50%);
    }
  }
}

.footer {
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;
  background-color: var(--yellow-one);
  padding: 0.5rem 0;
  margin-top: 1rem;
  gap: .7rem;

  &__metadata {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-size: .9rem;

    p {
      font-size: .7em;
    }
  }
}

.is-link {
  color: var(--dark-blue-one);
  font-style: italic;
}